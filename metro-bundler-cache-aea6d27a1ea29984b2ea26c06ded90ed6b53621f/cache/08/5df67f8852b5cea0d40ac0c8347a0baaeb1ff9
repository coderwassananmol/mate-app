Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = function () {
  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;
  var action = arguments[1];

  switch (action.type) {
    case _ActionTypes.FETCHING_USER:
      return _extends({}, state, {
        isFetching: true,
        error: null,
        data: []
      });
      break;

    case _ActionTypes.FETCHING_USER_SUCCESS:
      return _extends({}, state, {
        isFetching: false,
        error: null,
        data: action.payload
      });
      break;

    case _ActionTypes.FETCHING_USER_FAILURE:
      return _extends({}, state, {
        isFetching: true,
        error: null,
        data: []
      });
      break;

    default:
      return state;
  }
};

var _ActionTypes = require('../utils/ActionTypes');

var initialState = {
  isFetching: null,
  data: [],
  hasError: false,
  errorMessage: null
};